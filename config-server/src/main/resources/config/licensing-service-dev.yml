logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

spring:
  datasource:
    username: postgres
    url: jdbc:postgresql://localhost:5432/ostock_dev
    password: postgres
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8090
eureka:
  instance:
    preferIpAddress: 'true'
  client:
    fetchRegistry: 'true'
    registerWithEureka: 'true'
    serviceUrl:
      defaultZone: http://localhost:8070/eureka
example:
  property: I AM DEV

resilience4j:
  bulkhead:
    instances:
      licenseServiceBulkhead:
        max-concurrent-calls: 5
        max-wait-duration:
          seconds: 3
        writable-stack-trace-enabled: true
        event-consumer-buffer-size:
  retry:
    instances:
      licenseServiceRetry:
        max-attempts: 3
        wait-duration:
          seconds: 5
  circuitbreaker:
    instances:
      licenseService:
        register-health-indicator: true
        sliding-window-size: 5
        permitted-number-of-calls-in-half-open-state: 3
        failure-rate-threshold: 50
        wait-duration-in-open-state:
          seconds: 5
        record-exceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.lang.Throwable
          - java.io.IOException
          - java.util.concurrent.TimeoutException
      organizationService:
        sliding-window-size: 5
        register-health-indicator: true
        permitted-number-of-calls-in-half-open-state: 3
        failure-rate-threshold: 50
        wait-duration-in-open-state:
          seconds: 5
        record-exceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.lang.Throwable
          - java.io.IOException
          - java.util.concurrent.TimeoutException
